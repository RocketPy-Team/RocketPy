[project]
name = "rocketpy"
version = "1.9.0"
description="Advanced 6-DOF trajectory simulation for High-Power Rocketry."
dynamic = ["dependencies"]
readme = "README.md"
requires-python = ">=3.9"
authors = [
  {name = "Giovani Hidalgo Ceotto", email = "ghceotto@gmail.com"},
  {name = "Guilherme Fernandes Alves", email = "guilherme_fernandes@usp.br"},
  {name = "Mateus Stano Junqueira", email = "mateusstano@usp.br"},
  {name = "Pedro Henrique Marinho Bressan", email = "phmbressan@usp.br"},
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]


[project.urls]
homepage = "https://rocketpy.org/"
documentation = "https://docs.rocketpy.org/"
repository = "https://github.com/RocketPy-Team/RocketPy"
issues = "https://github.com/RocketPy-Team/RocketPy/issues"
changelog = "https://github.com/RocketPy-Team/RocketPy/blob/master/CHANGELOG.md"


[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"


[tool.setuptools]
packages = { find = { where = ["."], include = ["rocketpy*"] } }


[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }


[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-coverage",
    "black[jupyter]",
    "flake8-black",
    "flake8-pyproject",
    "pandas",
    "numericalunits==1.25",
    "pylint",
    "isort"
]

env-analysis = [
    "windrose>=1.6.8",
    "timezonefinder",
    "jsonpickle",
    "ipython",
    "ipywidgets>=7.6.3"
]

monte-carlo = [
    "imageio", 
    "multiprocess>=0.70",
    "statsmodels",
    "prettytable",
]

all = ["rocketpy[env-analysis]", "rocketpy[monte-carlo]"]


[tool.coverage.report]
exclude_also = [
    # Don't complain about exceptions or warnings not being covered by tests
    "warnings.warn*"
]


[tool.ruff]
target-version = "py39"
line-length = 88
indent-width = 4


[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = [
    "F401", # too many errors on __init__.py files (imported but unused)
]


[tool.ruff.lint.pycodestyle]
max-line-length = 88  # E501 reports lines that exceed the length of 88.


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"


[tool.ruff.lint.pydocstyle]
convention = "numpy"
