[project]
name = "rocketpy"
version = "1.4.2"
description="Advanced 6-DOF trajectory simulation for High-Power Rocketry."
dynamic = ["dependencies"]
readme = "README.md"
requires-python = ">=3.9"
authors = [
  {name = "Giovani Hidalgo Ceotto", email = "ghceotto@gmail.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
homepage = "https://rocketpy.org/"
documentation = "https://docs.rocketpy.org/"
repository = "https://github.com/RocketPy-Team/RocketPy"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = { find = { where = ["."], include = ["rocketpy*"] } }

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[project.optional-dependencies]
tests = [ 
    "pytest", 
    "pytest-coverage",
    "black[jupyter]",
    "flake8-black",
    "flake8-pyproject",
    "pandas",
    "numericalunits==1.25",
    "pylint",
    "isort"
]

env-analysis = [ 
    "windrose>=1.6.8", 
    "timezonefinder", 
    "jsonpickle", 
    "ipython", 
    "ipywidgets>=7.6.3" 
]

monte-carlo = [
    "imageio",
    "statsmodels",
    "prettytable",
]

all = ["rocketpy[env-analysis]", "rocketpy[monte-carlo]"]

[tool.black]
line-length = 88 
include = '\.py$|\.ipynb$'
skip-string-normalization = true

[tool.isort]
profile = "black"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    #Don't complain about exceptions or warnings not being covered by tests
    "warnings.warn*"
]

[tool.flake8]
max-line-length = 88
max-module-lines = 3000
ignore = [
    'W503', # conflicts with black (line break before binary operator)
    'E203', # conflicts with black (whitespace before ':')
    'E501', # ignored now because it is hard to fix the whole code (line too long)
    'E266', # this is pointless (too many leading '#' for block comment)
    'F401', # too many errors on __init__.py files (imported but unused)
    'E722', # pylint already checks for bare except
    'E226', # black does not adjust errors like this
    'E731', # pylint already checks for this (lambda functions)
]
exclude = [
    '.git,__pycache__',
]
